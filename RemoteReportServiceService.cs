// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.1
//


/// <remarks/>
[System.Web.Services.WebServiceBinding(Name="RemoteReportServicePort", Namespace="http://test/")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(getMeSomeReports))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(getMapsResponse))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(getMaps))]
public partial class RemoteReportServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getMapsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getMeSomeReportsOperationCompleted;
    
    public RemoteReportServiceService() {
        this.Url = "http://localhost:8080/grails-cxf-test/services/remoteReport";
    }
    
    public event getMapsCompletedEventHandler getMapsCompleted;
    
    public event getMeSomeReportsCompletedEventHandler getMeSomeReportsCompleted;
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://test/", ResponseNamespace="http://test/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlArray(ElementName="entires", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItem(ElementName="entry", IsNullable=false, Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public KeyValue[] getMaps() {
        object[] results = this.Invoke("getMaps", new object[0]);
        return ((KeyValue[])(results[0]));
    }
    
    public System.IAsyncResult BegingetMaps(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMaps", new object[0], callback, asyncState);
    }
    
    public KeyValue[] EndgetMaps(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((KeyValue[])(results[0]));
    }
    
    public void getMapsAsync() {
        this.getMapsAsync(null);
    }
    
    public void getMapsAsync(object userState) {
        if ((this.getMapsOperationCompleted == null)) {
            this.getMapsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMapsCompleted);
        }
        this.InvokeAsync("getMaps", new object[0], this.getMapsOperationCompleted, userState);
    }
    
    private void OngetMapsCompleted(object arg) {
        if ((this.getMapsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getMapsCompleted(this, new getMapsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://test/", ResponseNamespace="http://test/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("remoteReport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public remoteReport[] getMeSomeReports() {
        object[] results = this.Invoke("getMeSomeReports", new object[0]);
        return ((remoteReport[])(results[0]));
    }
    
    public System.IAsyncResult BegingetMeSomeReports(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMeSomeReports", new object[0], callback, asyncState);
    }
    
    public remoteReport[] EndgetMeSomeReports(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((remoteReport[])(results[0]));
    }
    
    public void getMeSomeReportsAsync() {
        this.getMeSomeReportsAsync(null);
    }
    
    public void getMeSomeReportsAsync(object userState) {
        if ((this.getMeSomeReportsOperationCompleted == null)) {
            this.getMeSomeReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMeSomeReportsCompleted);
        }
        this.InvokeAsync("getMeSomeReports", new object[0], this.getMeSomeReportsOperationCompleted, userState);
    }
    
    private void OngetMeSomeReportsCompleted(object arg) {
        if ((this.getMeSomeReportsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getMeSomeReportsCompleted(this, new getMeSomeReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://test/")]
public partial class KeyValue {
    
    private object keyField;
    
    private object valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://test/")]
public partial class getMaps {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://test/")]
public partial class getMapsResponse {
    
    private KeyValue[] entiresField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArray(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItem(ElementName="entry", IsNullable=false, Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public KeyValue[] entires {
        get {
            return this.entiresField;
        }
        set {
            this.entiresField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://test/")]
public partial class getMeSomeReports {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://test/")]
public partial class remoteReport {
    
    private long errorCodeField;
    
    private bool errorCodeSpecifiedField;
    
    private string errorMessageField;
    
    private long reportIdField;
    
    private bool reportIdSpecifiedField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public long errorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool errorCodeSpecified {
        get {
            return this.errorCodeSpecifiedField;
        }
        set {
            this.errorCodeSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string errorMessage {
        get {
            return this.errorMessageField;
        }
        set {
            this.errorMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public long reportId {
        get {
            return this.reportIdField;
        }
        set {
            this.reportIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool reportIdSpecified {
        get {
            return this.reportIdSpecifiedField;
        }
        set {
            this.reportIdSpecifiedField = value;
        }
    }
}

public partial class getMapsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getMapsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public KeyValue[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((KeyValue[])(this.results[0]));
        }
    }
}

public delegate void getMapsCompletedEventHandler(object sender, getMapsCompletedEventArgs args);

public partial class getMeSomeReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getMeSomeReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public remoteReport[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((remoteReport[])(this.results[0]));
        }
    }
}

public delegate void getMeSomeReportsCompletedEventHandler(object sender, getMeSomeReportsCompletedEventArgs args);
